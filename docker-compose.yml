version: '3.8'


services:
  passenger-app:
    build:
      context: ./frontend/PP
      dockerfile: Dockerfile
    image: epk-passenger-app
    networks:
      - discovery-network
    ports:
      - "80:80"
    depends_on:
      - gateway-app

  discovery-app:
    build:
      context: ./backend/discovery
      dockerfile: Dockerfile
    image: epk-discovery-app
    env_file:
      - ./backend/discovery/app-environment.env
    networks:
      - discovery-network
    ports:
      - "8761:8761"

  gateway-app:
    build:
      context: ./backend/gateway
      dockerfile: Dockerfile
    image: epk-gateway-app
    env_file:
      - ./backend/gateway/app-environment.env
    networks:
      - discovery-network
    ports:
      - "8080:8080"
    depends_on:
      - discovery-app

  account-db:
    image: postgres:15-alpine
    env_file:
      - ./backend/account/db-environment.env
    networks:
      - account-network
#    volumes:
#      - account-db:/var/lib/postgresql/data
    ports:
      - "5081:5432"

  account-app:
    build:
      context: ./backend/account
      dockerfile: Dockerfile
    image: epk-account-app
    env_file:
      - ./backend/account/app-environment.env
    networks:
      - account-network
      - discovery-network
    depends_on:
      - account-db
      - discovery-app
    ports:
      - "8081:8081"
      - "8071:8071"

  schedule-db:
    image: postgres:15-alpine
    env_file:
      - ./backend/schedule/db-environment.env
    networks:
      - schedule-network
#    volumes:
#      - schedule-db:/var/lib/postgresql/data
    ports:
      - "5083:5432"

  schedule-app:
    build:
      context: ./backend/schedule
      dockerfile: Dockerfile
    image: epk-schedule-app
    env_file:
      - ./backend/schedule/app-environment.env
    networks:
      - schedule-network
      - discovery-network
    depends_on:
      - schedule-db
      - discovery-app
    ports:
      - "8083:8083"

  ticket-db:
    image: postgres:15-alpine
    env_file:
      - ./backend/ticket/db-environment.env
    networks:
      - ticket-network
#    volumes:
#      - ticket-db:/var/lib/postgresql/data
    ports:
      - "5082:5432"

  ticket-app:
    build:
      context: ./backend/ticket
      dockerfile: Dockerfile
    image: epk-ticket-app
    env_file:
      - ./backend/ticket/app-environment.env
    networks:
      - ticket-network
      - discovery-network
    depends_on:
      - ticket-db
      - discovery-app
    ports:
      - "8082:8082"
      - "8072:8072"

# Disabled it to prevent duplicate data population.
# Since it won't be used in production we can just use this file as dev-env.
#volumes:
#  account-db:
#  ticket-db:
#  schedule-db:

networks:
  discovery-network:
    driver: bridge
  account-network:
  ticket-network:
  schedule-network:
